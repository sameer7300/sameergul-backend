# Generated by Django 4.2.19 on 2025-03-02 20:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=200)),
                ('credential_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Certifications',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('archived', 'Archived')], default='new', max_length=20)),
                ('response', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(max_length=200)),
                ('degree', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('gpa', models.CharField(blank=True, max_length=10)),
                ('description', models.TextField(blank=True)),
                ('achievements', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Education',
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('achievements', models.TextField()),
                ('technologies_used', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Experience',
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('short_description', models.CharField(max_length=200)),
                ('thumbnail', models.ImageField(upload_to='projects/thumbnails/')),
                ('featured_image', models.ImageField(upload_to='projects/featured/')),
                ('technologies', models.JSONField(default=list)),
                ('github_url', models.URLField(blank=True)),
                ('live_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectResume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('technologies', models.TextField()),
                ('link', models.URLField(blank=True)),
                ('github_link', models.URLField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='projects/')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-end_date', '-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('event_type', models.CharField(choices=[('education', 'Education'), ('work', 'Work Experience'), ('project', 'Project'), ('achievement', 'Achievement'), ('other', 'Other')], default='other', max_length=20)),
                ('organization', models.CharField(max_length=200)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('url', models.URLField(blank=True)),
                ('icon', models.FileField(blank=True, upload_to='timeline/icons/')),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-start_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('frontend', 'Frontend'), ('backend', 'Backend'), ('database', 'Database'), ('devops', 'DevOps'), ('tools', 'Tools'), ('other', 'Other')], default='other', max_length=20)),
                ('icon', models.FileField(blank=True, upload_to='skills/icons/')),
                ('proficiency', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(blank=True)),
                ('years_experience', models.DecimalField(decimal_places=1, max_digits=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'order', '-proficiency'],
                'unique_together': {('name', 'category')},
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True)),
                ('linkedin', models.URLField(blank=True)),
                ('github', models.URLField(blank=True)),
                ('profile_image', models.ImageField(blank=True, upload_to='resume/')),
                ('summary', models.TextField()),
                ('technical_skills', models.TextField(help_text='Comma-separated list of technical skills')),
                ('soft_skills', models.TextField(help_text='Comma-separated list of soft skills')),
                ('languages', models.TextField(help_text='Comma-separated list of languages with proficiency')),
                ('interests', models.TextField(blank=True)),
                ('volunteer_work', models.TextField(blank=True)),
                ('publications', models.TextField(blank=True)),
                ('awards', models.TextField(blank=True)),
                ('pdf_file', models.FileField(blank=True, upload_to='resume/')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('certifications', models.ManyToManyField(to='portfolio.certification')),
                ('education', models.ManyToManyField(to='portfolio.education')),
                ('experience', models.ManyToManyField(to='portfolio.experience')),
                ('projects', models.ManyToManyField(to='portfolio.projectresume')),
            ],
            options={
                'verbose_name': 'Resume',
                'verbose_name_plural': 'Resume',
            },
        ),
        migrations.CreateModel(
            name='ProjectImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='projects/gallery/')),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.IntegerField(default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='portfolio.project')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
    ]
